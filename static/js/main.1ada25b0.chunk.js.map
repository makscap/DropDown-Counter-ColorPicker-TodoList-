{"version":3,"sources":["components/ColorPicker/ColorPicker.js","components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","components/DropDown/DropdownToggle.js","components/TodoList/TodoList.js","components/TodoEditor/TodoEditor.js","components/Filter/Filter.js","components/Form/Form.js","App.js","index.js"],"names":["ColorPicker","state","activeOptionIdx","makeOptionClassName","index","classNames","setActiveIdx","setState","this","options","props","label","className","map","color","style","backgroundColor","onClick","Component","Controls","onIncrement","onDecrement","type","Value","value","Counter","initialValue","handleIncrement","prevState","handleDecrement","React","defaultProps","Dropdown","visible","toggle","TodoList","todos","onDeleteTodo","onToggleCompleted","id","text","completed","checked","onChange","TodoEditor","message","handleChange","e","currentTarget","handleSubmit","preventDefault","console","log","onSubmit","Filter","Form","name","surname","experience","license","reset","handleLicenseChange","disabled","colorPickerOpts","App","initialTodos","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","toggleCompleted","formSubmitHandler","data","changeFilter","getVisibleTobos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","totalTodoCount","length","completedTodoCount","visibleTodos","DropdownToggle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ada25b0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport classNames from 'classnames';\n// import s from './ColorPicker.module.css';\nimport './ColorPicker.css'\n\nclass ColorPicker extends Component {\nstate = {\n  activeOptionIdx: 0,\n};\n\n\n// Вариант без пакетика \"classnames\"\n\n// makeOptionClassName = (index) => {\n//   const optionClasses = ['ColorPicker__option']\n\n//   if(index === this.state.activeOptionIdx) {\n//     optionClasses.push('ColorPicker__option--active');\n//   }\n//   return optionClasses.join(' ');\n// }\n\n// setActiveIdx = (index) => {\n//   this.setState({activeOptionIdx: index})\n// };\n\n// Вариант c пакетиком \"classnames\"\n\n\n\n\nmakeOptionClassName = (index) => {\n\n  return classNames('ColorPicker__option', {'ColorPicker__option--active': index === this.state.activeOptionIdx})\n\n//   const optionClasses = ['ColorPicker__option']\n\n//   if(index === this.state.activeOptionIdx) {\n//     optionClasses.push('ColorPicker__option--active');\n//   }\n//   return optionClasses.join(' ');\n// }\n}\n\nsetActiveIdx = (index) => {\n  this.setState({activeOptionIdx: index})\n};\n\n\n\n\n\n\n\n\n\n  render() {\nconst {activeOptionIdx} = this.state;\nconst {options} = this.props;\n\n    const {label} = options[activeOptionIdx];\n   \n    return (\n      <div className=\"ColorPicker__container\">\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\n    <p>Выбранный цвет: {label}</p>\n        <div>\n          {options.map(({label, color}, index) => (\n<button\nkey={label}\nclassName={classNames('ColorPicker__option', {'ColorPicker__option--active': index === activeOptionIdx})}\nstyle={{ backgroundColor: color }}\nonClick={() => this.setActiveIdx(index)}\n></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default ColorPicker;","import React from 'react';\n\nconst Controls = ({onIncrement, onDecrement}) => (\n    <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onIncrement}>Увеличить на 1</button>\n    <button type=\"button\" onClick={onDecrement}>Уменьшить на 1</button>\n    </div>\n)\n\nexport default Controls;","import React from 'react';\n\nconst Value = ({value}) => (\n    <span className=\"Counter__value\">{value}</span>\n);\n\nexport default Value;","import React from 'react';\nimport './Counter.css';\nimport './Controls';\nimport Controls from './Controls';\nimport Value from './Value';\n\nclass Counter extends React.Component {\n    static defaultProps = {\n        initialValue: 0,\n    }\n\n    // static propTypes = {\n\n    // }\n\n    // constructor() {\n    //     super();\n\n    //     this.state = {\n    //         value: 0,\n    //     }\n    // }\n\n    state = {\n        value: this.props.initialValue,\n    };\n\n\n    handleIncrement = () => {\nthis.setState((prevState) => ({\n        value: prevState.value + 1,\n    }));\n};\n\n    handleDecrement = () => {\nthis.setState((prevState) => ({\n        value: prevState.value - 1,\n    }));\n\n    }\n\n    render () {\n        const {value} = this.state;\n        return (\n            <div className=\"Counter\">\n                <Value value={value} />\n                {/* <span className=\"Counter__value\">{value}</span> */}\n<Controls onIncrement={this.handleIncrement} onDecrement={this.handleDecrement}/>\n                </div>\n        );\n    }\n}\n\nexport default Counter;","import React, { Component } from 'react';\nimport './Dropdown.css';\n\nclass Dropdown extends Component {\n    state = {\n        visible: false,\n    }\n\ntoggle = () => {\n    this.setState(prevState => ({\n        visible: !prevState.visible,\n    }))\n}\n\n    // show = () => {\n    //     this.setState({visible: true});\n    // }\n\n    // hide = () => {\n    //     this.setState({visible: false});\n    // }\n\n    render() {\n        const {visible} = this.state;\n        return (\n            <div className=\"Dropdown\">\n                <button \n                type=\"button\" \n                className=\"Dropdown__toggle\" \n                onClick={this.toggle}\n        >{visible ? 'Скрыть' : 'Показать'}</button>\n                \n{visible && (\n    <div className=\"Dropdown__menu\">Выпадающее меню</div>\n)}\n            </div>\n        )\n    }\n}\n\nexport default Dropdown;","import React from 'react';\nimport classNames from 'classnames';\nimport './TodoList.css';\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\n    <ul className=\"TodoList__text\">\n{todos.map(({id, text, completed}) => (\n<li key={id} className={classNames('TodoList__item', {\n    \"TodoList__item--completed\": completed,\n})}\n>\n<input type=\"checkbox\" className=\"TodoList__checkbox\" checked={completed} onChange={() => onToggleCompleted(id)} />\n\n    <p className=\"TodoList__text\">{text}</p>\n\n    <button type=\"button\" className=\"TodoList__btn\" onClick={() => onDeleteTodo(id)}>Удалить</button>\n    </li>\n))}\n</ul>\n)\n\nexport default TodoList;","import React, {Component} from 'react';\nimport './TodoEditor.scss'\n\nclass TodoEditor extends Component {\n    state = {\n        message: ''\n    };\n\n    handleChange = e => {\nthis.setState({\n    message: e.currentTarget.value \n})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        console.log(this.state)\n\n        this.props.onSubmit(this.state.message);\n\n        this.setState({message: ''})\n    }\n\n    render() {\n        return (\n            <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n                <textarea className=\"TodoEditor__textarea\" value={this.state.message} onChange={this.handleChange}>\n                </textarea>\n                <button type=\"submit\" className=\"TodoEditor__button\">Добавить</button>\n            </form>\n        \n        );\n    };\n}\n\nexport default TodoEditor;","import React from 'react';\n\nconst Filter = ({value, onChange}) => (\n    <label>\n    Фильтр по имени <input type=\"text\" value={value} onChange={onChange}/>\n  </label>\n);\n\nexport default Filter;","import React, {Component} from 'react';\n\nclass Form extends Component {\n    state = {\n        name: '',\n        surname: '',\n        experience: 'junior',\n        license: false,\n    };\n\n    handleChange = e => {\n        const {name, value} = e.currentTarget;\n            this.setState({\n              [name]: value,\n            })}\n\n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(this.state)\n        this.props.onSubmit(this.state);\n        this.reset();\n          }\n\n\n    handleLicenseChange = (e) => {\n        console.log(e.currentTarget.checked);\n        this.setState({\n            license: e.currentTarget.checked,\n        })\n    };\n\n    reset = () => {\n        this.setState({\n        name: '',\n        surname: '',\n              })}\n          \n    render() {\n\nreturn (\n    <form onSubmit={this.handleSubmit}>\n  <label>\n    Имя     <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n  </label>\n  <label>\n    Фамилия <input type=\"text\" name=\"surname\" value={this.state.surname} onChange={this.handleChange}/>\n      </label>\n\n      <p>Ваш уровень:</p>\n<label>\n<input type=\"radio\" name=\"experience\" value=\"junior\" onChange={this.handleChange} checked={this.state.experience === \"junior\"}/> Junior\n</label>\n<label>\n<input type=\"radio\" name=\"experience\" value=\"middle\" onChange={this.handleChange} checked={this.state.experience === \"middle\"}/> Middle\n</label>\n<label>\n<input type=\"radio\" name=\"experience\" value=\"senior\" onChange={this.handleChange} checked={this.state.experience === \"senior\"}/> Senior\n</label>\n<br />\n\n<label>\n<input type=\"checkbox\" name=\"license\" checked={this.state.license} onChange={this.handleLicenseChange}/> Принимаю условия лицензионного соглашения\n</label>\n\n<br />\n      <button type=\"submit\" disabled={!this.state.license}>Отправить</button>\n</form>\n)\n    }}\n\n export default Form;","// import './App.css';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ColorPicker from './components/ColorPicker';\nimport Counter from './components/Counter';\n// import Dropdown from './components/Dropdown/Dropdown';\nimport DropdownToggle from './components/DropDown';\nimport TodoList from './components/TodoList';\nimport TodoEditor from './components/TodoEditor/TodoEditor'\nimport Filter from './components/Filter/Filter'\nimport initialTodos from './todos.json'\nimport Form from './components/Form/Form'\n\nconst colorPickerOpts = [\n     {label: 'red', color: 'lightcoral'},\n     { label: 'green', color: 'lightgreen'},\n     { label: 'yellow', color: 'lightyellow'}];\n    \nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: ''\n  };\n\n\n  addTodo = text => {\nconst todo = {\nid: shortid.generate(),\ntext,\ncompleted: false,\n}\n\nthis.setState(({todos}) => ({\n  todos: [todo, ...todos],\n}))\n  }\n\n  deleteTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }))\n  }\n\n\n  toggleCompleted = todoId => {\n    console.log(todoId)\n\n    // Или так v\n\n    // this.setState(prevState => ({\n    //   todos: prevState.todos.map(todo => {\n    //     if(todo.id === todoId) {\n    //       return {\n    //         ...todo,\n    //         completed: !todo.completed\n    //       }\n    //     }\n    //     return todo;\n        \n    //   })\n    // }))\n\n    // Или тернарником v\n\n    this.setState(({todos}) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId \n        ? { ...todo,\n          completed: !todo.completed } : todo,\n          ),\n  }))}\n\n  formSubmitHandler = data => {\nconsole.log(data)\n  }\n\n//   handleNameChange = event => {\n// // console.log(event.currentTarget.value)\n// this.setState({name: event.currentTarget.value})\n//   }\n\nchangeFilter = e => {\nthis.setState({filter: e.currentTarget.value})\n}\n\ngetVisibleTobos = () => {\n  const { filter, todos} = this.state;\n  const normalizedFilter = filter.toLowerCase();\n  return todos.filter(todo => todo.text.toLowerCase().includes(normalizedFilter))\n\n}\n\ncalculateCompletedTodos = () => {\n  const {todos} = this.state;\n  return todos.reduce(\n    (total, todo) => (todo.completed ? total + 1 : total),\n    0,\n  );\n}\n\n  render() {\n    const {todos, filter} = this.state;\n\n    const totalTodoCount = todos.length;\n    const completedTodoCount = this.calculateCompletedTodos();\n\n    const visibleTodos = this.getVisibleTobos();\n\n    return (\n       <>\n      <h1>Состояние компонента</h1>\n    <Counter initialValue={10}/>\n\n<Form onSubmit={this.formSubmitHandler}/>\n    {/* <Dropdown /> */}\n    <DropdownToggle />\n    <ColorPicker options={colorPickerOpts} />\n    <h2>Состояние елементов</h2>\n<TodoEditor onSubmit={this.addTodo} />\n<div>\n<p>Общее кол-во: {totalTodoCount}</p>\n    <p>Кол-во выполненых:{completedTodoCount}</p>\n</div>\n\n<Filter value={filter} onChange={this.changeFilter} />\n    <TodoList todos={visibleTodos} onDeleteTodo={this.deleteTodo} onToggleCompleted={this.toggleCompleted}/>\n    </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}